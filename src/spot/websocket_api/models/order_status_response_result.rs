/*
 * Binance Spot WebSocket API
 *
 * OpenAPI Specifications for the Binance Spot WebSocket API
 *
 * API documents:
 * - [Github web-socket-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md)
 * - [General API information for web-socket-api on website](https://developers.binance.com/docs/binance-spot-api-docs/web-socket-api/general-api-information)
 *
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::spot::websocket_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderStatusResponseResult {
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i64>,
    #[serde(rename = "orderListId", skip_serializing_if = "Option::is_none")]
    pub order_list_id: Option<i64>,
    #[serde(rename = "clientOrderId", skip_serializing_if = "Option::is_none")]
    pub client_order_id: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "origQty", skip_serializing_if = "Option::is_none")]
    pub orig_qty: Option<String>,
    #[serde(rename = "executedQty", skip_serializing_if = "Option::is_none")]
    pub executed_qty: Option<String>,
    #[serde(
        rename = "cummulativeQuoteQty",
        skip_serializing_if = "Option::is_none"
    )]
    pub cummulative_quote_qty: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "timeInForce", skip_serializing_if = "Option::is_none")]
    pub time_in_force: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "stopPrice", skip_serializing_if = "Option::is_none")]
    pub stop_price: Option<String>,
    #[serde(rename = "trailingDelta", skip_serializing_if = "Option::is_none")]
    pub trailing_delta: Option<i64>,
    #[serde(rename = "trailingTime", skip_serializing_if = "Option::is_none")]
    pub trailing_time: Option<i64>,
    #[serde(rename = "icebergQty", skip_serializing_if = "Option::is_none")]
    pub iceberg_qty: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
    #[serde(rename = "isWorking", skip_serializing_if = "Option::is_none")]
    pub is_working: Option<bool>,
    #[serde(rename = "workingTime", skip_serializing_if = "Option::is_none")]
    pub working_time: Option<i64>,
    #[serde(rename = "origQuoteOrderQty", skip_serializing_if = "Option::is_none")]
    pub orig_quote_order_qty: Option<String>,
    #[serde(rename = "strategyId", skip_serializing_if = "Option::is_none")]
    pub strategy_id: Option<i64>,
    #[serde(rename = "strategyType", skip_serializing_if = "Option::is_none")]
    pub strategy_type: Option<i64>,
    #[serde(
        rename = "selfTradePreventionMode",
        skip_serializing_if = "Option::is_none"
    )]
    pub self_trade_prevention_mode: Option<String>,
    #[serde(rename = "preventedMatchId", skip_serializing_if = "Option::is_none")]
    pub prevented_match_id: Option<i64>,
    #[serde(rename = "preventedQuantity", skip_serializing_if = "Option::is_none")]
    pub prevented_quantity: Option<String>,
}

impl OrderStatusResponseResult {
    #[must_use]
    pub fn new() -> OrderStatusResponseResult {
        OrderStatusResponseResult {
            symbol: None,
            order_id: None,
            order_list_id: None,
            client_order_id: None,
            price: None,
            orig_qty: None,
            executed_qty: None,
            cummulative_quote_qty: None,
            status: None,
            time_in_force: None,
            r#type: None,
            side: None,
            stop_price: None,
            trailing_delta: None,
            trailing_time: None,
            iceberg_qty: None,
            time: None,
            update_time: None,
            is_working: None,
            working_time: None,
            orig_quote_order_qty: None,
            strategy_id: None,
            strategy_type: None,
            self_trade_prevention_mode: None,
            prevented_match_id: None,
            prevented_quantity: None,
        }
    }
}
