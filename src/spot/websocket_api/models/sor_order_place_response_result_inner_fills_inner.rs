/*
 * Binance Spot WebSocket API
 *
 * OpenAPI Specifications for the Binance Spot WebSocket API
 *
 * API documents:
 * - [Github web-socket-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md)
 * - [General API information for web-socket-api on website](https://developers.binance.com/docs/binance-spot-api-docs/web-socket-api/general-api-information)
 *
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::spot::websocket_api::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SorOrderPlaceResponseResultInnerFillsInner {
    #[serde(rename = "matchType", skip_serializing_if = "Option::is_none")]
    pub match_type: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "qty", skip_serializing_if = "Option::is_none")]
    pub qty: Option<String>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<String>,
    #[serde(rename = "commissionAsset", skip_serializing_if = "Option::is_none")]
    pub commission_asset: Option<String>,
    #[serde(rename = "tradeId", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<i64>,
    #[serde(rename = "allocId", skip_serializing_if = "Option::is_none")]
    pub alloc_id: Option<i64>,
}

impl SorOrderPlaceResponseResultInnerFillsInner {
    #[must_use]
    pub fn new() -> SorOrderPlaceResponseResultInnerFillsInner {
        SorOrderPlaceResponseResultInnerFillsInner {
            match_type: None,
            price: None,
            qty: None,
            commission: None,
            commission_asset: None,
            trade_id: None,
            alloc_id: None,
        }
    }
}
