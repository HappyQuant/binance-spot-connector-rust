/*
 * Binance Spot WebSocket API
 *
 * OpenAPI Specifications for the Binance Spot WebSocket API
 *
 * API documents:
 * - [Github web-socket-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/web-socket-api.md)
 * - [General API information for web-socket-api on website](https://developers.binance.com/docs/binance-spot-api-docs/web-socket-api/general-api-information)
 *
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::spot::websocket_api::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListStatus {
    #[serde(rename = "E", skip_serializing_if = "Option::is_none")]
    pub e_uppercase: Option<i64>,
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    #[serde(rename = "g", skip_serializing_if = "Option::is_none")]
    pub g: Option<i64>,
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<String>,
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<String>,
    #[serde(rename = "L", skip_serializing_if = "Option::is_none")]
    pub l_uppercase: Option<String>,
    #[serde(rename = "r", skip_serializing_if = "Option::is_none")]
    pub r: Option<String>,
    #[serde(rename = "C", skip_serializing_if = "Option::is_none")]
    pub c_uppercase: Option<String>,
    #[serde(rename = "T", skip_serializing_if = "Option::is_none")]
    pub t_uppercase: Option<i64>,
    #[serde(rename = "O", skip_serializing_if = "Option::is_none")]
    pub o_uppercase: Option<Vec<models::ListStatusOInner>>,
}

impl ListStatus {
    #[must_use]
    pub fn new() -> ListStatus {
        ListStatus {
            e_uppercase: None,
            s: None,
            g: None,
            c: None,
            l: None,
            l_uppercase: None,
            r: None,
            c_uppercase: None,
            t_uppercase: None,
            o_uppercase: None,
        }
    }
}
