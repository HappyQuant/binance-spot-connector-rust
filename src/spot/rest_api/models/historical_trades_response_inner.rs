/*
 * Binance Spot REST API
 *
 * OpenAPI Specifications for the Binance Spot REST API
 *
 * API documents:
 * - [Github rest-api documentation file](https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md)
 * - [General API information for rest-api on website](https://developers.binance.com/docs/binance-spot-api-docs/rest-api/general-api-information)
 *
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::spot::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HistoricalTradesResponseInner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "qty", skip_serializing_if = "Option::is_none")]
    pub qty: Option<String>,
    #[serde(rename = "quoteQty", skip_serializing_if = "Option::is_none")]
    pub quote_qty: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "isBuyerMaker", skip_serializing_if = "Option::is_none")]
    pub is_buyer_maker: Option<bool>,
    #[serde(rename = "isBestMatch", skip_serializing_if = "Option::is_none")]
    pub is_best_match: Option<bool>,
}

impl HistoricalTradesResponseInner {
    #[must_use]
    pub fn new() -> HistoricalTradesResponseInner {
        HistoricalTradesResponseInner {
            id: None,
            price: None,
            qty: None,
            quote_qty: None,
            time: None,
            is_buyer_maker: None,
            is_best_match: None,
        }
    }
}
