/*
 * Binance Derivatives Trading Options WebSocket Market Streams
 *
 * OpenAPI Specification for the Binance Derivatives Trading Options WebSocket Market Streams
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::derivatives_trading_options::websocket_streams::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NewSymbolInfoResponse {
    #[serde(rename = "e", skip_serializing_if = "Option::is_none")]
    pub e: Option<String>,
    #[serde(rename = "E", skip_serializing_if = "Option::is_none")]
    pub e_uppercase: Option<i64>,
    #[serde(rename = "u", skip_serializing_if = "Option::is_none")]
    pub u: Option<String>,
    #[serde(rename = "qa", skip_serializing_if = "Option::is_none")]
    pub qa: Option<String>,
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<i64>,
    #[serde(rename = "mq", skip_serializing_if = "Option::is_none")]
    pub mq: Option<String>,
    #[serde(rename = "d", skip_serializing_if = "Option::is_none")]
    pub d: Option<String>,
    #[serde(rename = "sp", skip_serializing_if = "Option::is_none")]
    pub sp: Option<String>,
    #[serde(rename = "ed", skip_serializing_if = "Option::is_none")]
    pub ed: Option<i64>,
}

impl NewSymbolInfoResponse {
    #[must_use]
    pub fn new() -> NewSymbolInfoResponse {
        NewSymbolInfoResponse {
            e: None,
            e_uppercase: None,
            u: None,
            qa: None,
            s: None,
            unit: None,
            mq: None,
            d: None,
            sp: None,
            ed: None,
        }
    }
}
