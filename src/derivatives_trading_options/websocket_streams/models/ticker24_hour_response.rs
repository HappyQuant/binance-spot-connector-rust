/*
 * Binance Derivatives Trading Options WebSocket Market Streams
 *
 * OpenAPI Specification for the Binance Derivatives Trading Options WebSocket Market Streams
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::derivatives_trading_options::websocket_streams::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ticker24HourResponse {
    #[serde(rename = "e", skip_serializing_if = "Option::is_none")]
    pub e: Option<String>,
    #[serde(rename = "E", skip_serializing_if = "Option::is_none")]
    pub e_uppercase: Option<i64>,
    #[serde(rename = "T", skip_serializing_if = "Option::is_none")]
    pub t_uppercase: Option<i64>,
    #[serde(rename = "s", skip_serializing_if = "Option::is_none")]
    pub s: Option<String>,
    #[serde(rename = "o", skip_serializing_if = "Option::is_none")]
    pub o: Option<String>,
    #[serde(rename = "h", skip_serializing_if = "Option::is_none")]
    pub h: Option<String>,
    #[serde(rename = "l", skip_serializing_if = "Option::is_none")]
    pub l: Option<String>,
    #[serde(rename = "c", skip_serializing_if = "Option::is_none")]
    pub c: Option<String>,
    #[serde(rename = "V", skip_serializing_if = "Option::is_none")]
    pub v_uppercase: Option<String>,
    #[serde(rename = "A", skip_serializing_if = "Option::is_none")]
    pub a_uppercase: Option<String>,
    #[serde(rename = "P", skip_serializing_if = "Option::is_none")]
    pub p_uppercase: Option<String>,
    #[serde(rename = "p", skip_serializing_if = "Option::is_none")]
    pub p: Option<String>,
    #[serde(rename = "Q", skip_serializing_if = "Option::is_none")]
    pub q_uppercase: Option<String>,
    #[serde(rename = "F", skip_serializing_if = "Option::is_none")]
    pub f_uppercase: Option<String>,
    #[serde(rename = "L", skip_serializing_if = "Option::is_none")]
    pub l_uppercase: Option<String>,
    #[serde(rename = "n", skip_serializing_if = "Option::is_none")]
    pub n: Option<i64>,
    #[serde(rename = "bo", skip_serializing_if = "Option::is_none")]
    pub bo: Option<String>,
    #[serde(rename = "ao", skip_serializing_if = "Option::is_none")]
    pub ao: Option<String>,
    #[serde(rename = "bq", skip_serializing_if = "Option::is_none")]
    pub bq: Option<String>,
    #[serde(rename = "aq", skip_serializing_if = "Option::is_none")]
    pub aq: Option<String>,
    #[serde(rename = "b", skip_serializing_if = "Option::is_none")]
    pub b: Option<String>,
    #[serde(rename = "a", skip_serializing_if = "Option::is_none")]
    pub a: Option<String>,
    #[serde(rename = "d", skip_serializing_if = "Option::is_none")]
    pub d: Option<String>,
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<String>,
    #[serde(rename = "g", skip_serializing_if = "Option::is_none")]
    pub g: Option<String>,
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<String>,
    #[serde(rename = "vo", skip_serializing_if = "Option::is_none")]
    pub vo: Option<String>,
    #[serde(rename = "mp", skip_serializing_if = "Option::is_none")]
    pub mp: Option<String>,
    #[serde(rename = "hl", skip_serializing_if = "Option::is_none")]
    pub hl: Option<String>,
    #[serde(rename = "ll", skip_serializing_if = "Option::is_none")]
    pub ll: Option<String>,
    #[serde(rename = "eep", skip_serializing_if = "Option::is_none")]
    pub eep: Option<String>,
}

impl Ticker24HourResponse {
    #[must_use]
    pub fn new() -> Ticker24HourResponse {
        Ticker24HourResponse {
            e: None,
            e_uppercase: None,
            t_uppercase: None,
            s: None,
            o: None,
            h: None,
            l: None,
            c: None,
            v_uppercase: None,
            a_uppercase: None,
            p_uppercase: None,
            p: None,
            q_uppercase: None,
            f_uppercase: None,
            l_uppercase: None,
            n: None,
            bo: None,
            ao: None,
            bq: None,
            aq: None,
            b: None,
            a: None,
            d: None,
            t: None,
            g: None,
            v: None,
            vo: None,
            mp: None,
            hl: None,
            ll: None,
            eep: None,
        }
    }
}
