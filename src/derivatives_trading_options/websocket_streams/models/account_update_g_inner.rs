/*
 * Binance Derivatives Trading Options WebSocket Market Streams
 *
 * OpenAPI Specification for the Binance Derivatives Trading Options WebSocket Market Streams
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::derivatives_trading_options::websocket_streams::models;
use serde::{Deserialize, Deserializer, Serialize, de::Error};
use serde_json::Value;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountUpdateGInner {
    #[serde(rename = "ui", skip_serializing_if = "Option::is_none")]
    pub ui: Option<String>,
    #[serde(rename = "d", skip_serializing_if = "Option::is_none")]
    pub d: Option<rust_decimal::Decimal>,
    #[serde(rename = "t", skip_serializing_if = "Option::is_none")]
    pub t: Option<rust_decimal::Decimal>,
    #[serde(rename = "g", skip_serializing_if = "Option::is_none")]
    pub g: Option<rust_decimal::Decimal>,
    #[serde(rename = "v", skip_serializing_if = "Option::is_none")]
    pub v: Option<rust_decimal::Decimal>,
}

impl AccountUpdateGInner {
    #[must_use]
    pub fn new() -> AccountUpdateGInner {
        AccountUpdateGInner {
            ui: None,
            d: None,
            t: None,
            g: None,
            v: None,
        }
    }
}
