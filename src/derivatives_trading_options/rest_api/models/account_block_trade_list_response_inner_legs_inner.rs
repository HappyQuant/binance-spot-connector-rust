/*
 * Binance Derivatives Trading Options REST API
 *
 * OpenAPI Specification for the Binance Derivatives Trading Options REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::derivatives_trading_options::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountBlockTradeListResponseInnerLegsInner {
    #[serde(rename = "createTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<i64>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    #[serde(rename = "orderPrice", skip_serializing_if = "Option::is_none")]
    pub order_price: Option<rust_decimal::Decimal>,
    #[serde(rename = "orderQuantity", skip_serializing_if = "Option::is_none")]
    pub order_quantity: Option<rust_decimal::Decimal>,
    #[serde(rename = "orderStatus", skip_serializing_if = "Option::is_none")]
    pub order_status: Option<String>,
    #[serde(rename = "executedQty", skip_serializing_if = "Option::is_none")]
    pub executed_qty: Option<rust_decimal::Decimal>,
    #[serde(rename = "executedAmount", skip_serializing_if = "Option::is_none")]
    pub executed_amount: Option<rust_decimal::Decimal>,
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<rust_decimal::Decimal>,
    #[serde(rename = "orderType", skip_serializing_if = "Option::is_none")]
    pub order_type: Option<String>,
    #[serde(rename = "orderSide", skip_serializing_if = "Option::is_none")]
    pub order_side: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "tradeId", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<i64>,
    #[serde(rename = "tradePrice", skip_serializing_if = "Option::is_none")]
    pub trade_price: Option<rust_decimal::Decimal>,
    #[serde(rename = "tradeQty", skip_serializing_if = "Option::is_none")]
    pub trade_qty: Option<rust_decimal::Decimal>,
    #[serde(rename = "tradeTime", skip_serializing_if = "Option::is_none")]
    pub trade_time: Option<i64>,
    #[serde(rename = "liquidity", skip_serializing_if = "Option::is_none")]
    pub liquidity: Option<String>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<rust_decimal::Decimal>,
}

impl AccountBlockTradeListResponseInnerLegsInner {
    #[must_use]
    pub fn new() -> AccountBlockTradeListResponseInnerLegsInner {
        AccountBlockTradeListResponseInnerLegsInner {
            create_time: None,
            update_time: None,
            symbol: None,
            order_id: None,
            order_price: None,
            order_quantity: None,
            order_status: None,
            executed_qty: None,
            executed_amount: None,
            fee: None,
            order_type: None,
            order_side: None,
            id: None,
            trade_id: None,
            trade_price: None,
            trade_qty: None,
            trade_time: None,
            liquidity: None,
            commission: None,
        }
    }
}
