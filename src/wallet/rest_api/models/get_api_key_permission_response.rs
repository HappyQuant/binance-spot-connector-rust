/*
 * Binance Wallet REST API
 *
 * OpenAPI Specification for the Binance Wallet REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::wallet::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetApiKeyPermissionResponse {
    #[serde(rename = "ipRestrict", skip_serializing_if = "Option::is_none")]
    pub ip_restrict: Option<bool>,
    #[serde(rename = "createTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<i64>,
    #[serde(rename = "enableReading", skip_serializing_if = "Option::is_none")]
    pub enable_reading: Option<bool>,
    #[serde(rename = "enableWithdrawals", skip_serializing_if = "Option::is_none")]
    pub enable_withdrawals: Option<bool>,
    #[serde(
        rename = "enableInternalTransfer",
        skip_serializing_if = "Option::is_none"
    )]
    pub enable_internal_transfer: Option<bool>,
    #[serde(rename = "enableMargin", skip_serializing_if = "Option::is_none")]
    pub enable_margin: Option<bool>,
    #[serde(rename = "enableFutures", skip_serializing_if = "Option::is_none")]
    pub enable_futures: Option<bool>,
    #[serde(
        rename = "permitsUniversalTransfer",
        skip_serializing_if = "Option::is_none"
    )]
    pub permits_universal_transfer: Option<bool>,
    #[serde(
        rename = "enableVanillaOptions",
        skip_serializing_if = "Option::is_none"
    )]
    pub enable_vanilla_options: Option<bool>,
    #[serde(rename = "enableFixApiTrade", skip_serializing_if = "Option::is_none")]
    pub enable_fix_api_trade: Option<bool>,
    #[serde(rename = "enableFixReadOnly", skip_serializing_if = "Option::is_none")]
    pub enable_fix_read_only: Option<bool>,
    #[serde(
        rename = "enableSpotAndMarginTrading",
        skip_serializing_if = "Option::is_none"
    )]
    pub enable_spot_and_margin_trading: Option<bool>,
    #[serde(
        rename = "enablePortfolioMarginTrading",
        skip_serializing_if = "Option::is_none"
    )]
    pub enable_portfolio_margin_trading: Option<bool>,
}

impl GetApiKeyPermissionResponse {
    #[must_use]
    pub fn new() -> GetApiKeyPermissionResponse {
        GetApiKeyPermissionResponse {
            ip_restrict: None,
            create_time: None,
            enable_reading: None,
            enable_withdrawals: None,
            enable_internal_transfer: None,
            enable_margin: None,
            enable_futures: None,
            permits_universal_transfer: None,
            enable_vanilla_options: None,
            enable_fix_api_trade: None,
            enable_fix_read_only: None,
            enable_spot_and_margin_trading: None,
            enable_portfolio_margin_trading: None,
        }
    }
}
