/*
 * Binance Staking REST API
 *
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::staking::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetOnChainYieldsLockedRewardsHistoryResponseRowsInner {
    #[serde(rename = "positionId", skip_serializing_if = "Option::is_none")]
    pub position_id: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "lockPeriod", skip_serializing_if = "Option::is_none")]
    pub lock_period: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
}

impl GetOnChainYieldsLockedRewardsHistoryResponseRowsInner {
    #[must_use]
    pub fn new() -> GetOnChainYieldsLockedRewardsHistoryResponseRowsInner {
        GetOnChainYieldsLockedRewardsHistoryResponseRowsInner {
            position_id: None,
            time: None,
            asset: None,
            lock_period: None,
            amount: None,
        }
    }
}
