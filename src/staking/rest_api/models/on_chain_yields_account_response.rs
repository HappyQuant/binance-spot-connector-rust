/*
 * Binance Staking REST API
 *
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::staking::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OnChainYieldsAccountResponse {
    #[serde(rename = "totalAmountInBTC", skip_serializing_if = "Option::is_none")]
    pub total_amount_in_btc: Option<String>,
    #[serde(rename = "totalAmountInUSDT", skip_serializing_if = "Option::is_none")]
    pub total_amount_in_usdt: Option<String>,
    #[serde(
        rename = "totalFlexibleAmountInBTC",
        skip_serializing_if = "Option::is_none"
    )]
    pub total_flexible_amount_in_btc: Option<String>,
    #[serde(
        rename = "totalFlexibleAmountInUSDT",
        skip_serializing_if = "Option::is_none"
    )]
    pub total_flexible_amount_in_usdt: Option<String>,
    #[serde(rename = "totalLockedInBTC", skip_serializing_if = "Option::is_none")]
    pub total_locked_in_btc: Option<String>,
    #[serde(rename = "totalLockedInUSDT", skip_serializing_if = "Option::is_none")]
    pub total_locked_in_usdt: Option<String>,
}

impl OnChainYieldsAccountResponse {
    #[must_use]
    pub fn new() -> OnChainYieldsAccountResponse {
        OnChainYieldsAccountResponse {
            total_amount_in_btc: None,
            total_amount_in_usdt: None,
            total_flexible_amount_in_btc: None,
            total_flexible_amount_in_usdt: None,
            total_locked_in_btc: None,
            total_locked_in_usdt: None,
        }
    }
}
