/*
 * Binance Staking REST API
 *
 * OpenAPI Specification for the Binance Staking REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::staking::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EthStakingAccountResponse {
    #[serde(rename = "holdingInETH", skip_serializing_if = "Option::is_none")]
    pub holding_in_eth: Option<String>,
    #[serde(rename = "holdings", skip_serializing_if = "Option::is_none")]
    pub holdings: Option<Box<models::EthStakingAccountResponseHoldings>>,
    #[serde(
        rename = "thirtyDaysProfitInETH",
        skip_serializing_if = "Option::is_none"
    )]
    pub thirty_days_profit_in_eth: Option<String>,
    #[serde(rename = "profit", skip_serializing_if = "Option::is_none")]
    pub profit: Option<Box<models::EthStakingAccountResponseProfit>>,
}

impl EthStakingAccountResponse {
    #[must_use]
    pub fn new() -> EthStakingAccountResponse {
        EthStakingAccountResponse {
            holding_in_eth: None,
            holdings: None,
            thirty_days_profit_in_eth: None,
            profit: None,
        }
    }
}
