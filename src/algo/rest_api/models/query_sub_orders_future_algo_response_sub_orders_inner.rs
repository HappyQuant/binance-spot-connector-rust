/*
 * Binance Algo REST API
 *
 * OpenAPI Specification for the Binance Algo REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::algo::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QuerySubOrdersFutureAlgoResponseSubOrdersInner {
    #[serde(rename = "algoId", skip_serializing_if = "Option::is_none")]
    pub algo_id: Option<i64>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i64>,
    #[serde(rename = "orderStatus", skip_serializing_if = "Option::is_none")]
    pub order_status: Option<String>,
    #[serde(rename = "executedQty", skip_serializing_if = "Option::is_none")]
    pub executed_qty: Option<String>,
    #[serde(rename = "executedAmt", skip_serializing_if = "Option::is_none")]
    pub executed_amt: Option<String>,
    #[serde(rename = "feeAmt", skip_serializing_if = "Option::is_none")]
    pub fee_amt: Option<String>,
    #[serde(rename = "feeAsset", skip_serializing_if = "Option::is_none")]
    pub fee_asset: Option<String>,
    #[serde(rename = "bookTime", skip_serializing_if = "Option::is_none")]
    pub book_time: Option<i64>,
    #[serde(rename = "avgPrice", skip_serializing_if = "Option::is_none")]
    pub avg_price: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "subId", skip_serializing_if = "Option::is_none")]
    pub sub_id: Option<i64>,
    #[serde(rename = "timeInForce", skip_serializing_if = "Option::is_none")]
    pub time_in_force: Option<String>,
    #[serde(rename = "origQty", skip_serializing_if = "Option::is_none")]
    pub orig_qty: Option<String>,
}

impl QuerySubOrdersFutureAlgoResponseSubOrdersInner {
    #[must_use]
    pub fn new() -> QuerySubOrdersFutureAlgoResponseSubOrdersInner {
        QuerySubOrdersFutureAlgoResponseSubOrdersInner {
            algo_id: None,
            order_id: None,
            order_status: None,
            executed_qty: None,
            executed_amt: None,
            fee_amt: None,
            fee_asset: None,
            book_time: None,
            avg_price: None,
            side: None,
            symbol: None,
            sub_id: None,
            time_in_force: None,
            orig_qty: None,
        }
    }
}
