/*
 * Binance Sub Account REST API
 *
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::sub_account::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QuerySubAccountListResponseSubAccountsInner {
    #[serde(rename = "subUserId", skip_serializing_if = "Option::is_none")]
    pub sub_user_id: Option<i64>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "remark", skip_serializing_if = "Option::is_none")]
    pub remark: Option<String>,
    #[serde(rename = "isFreeze", skip_serializing_if = "Option::is_none")]
    pub is_freeze: Option<bool>,
    #[serde(rename = "createTime", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<i64>,
    #[serde(
        rename = "isManagedSubAccount",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_managed_sub_account: Option<bool>,
    #[serde(
        rename = "isAssetManagementSubAccount",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_asset_management_sub_account: Option<bool>,
}

impl QuerySubAccountListResponseSubAccountsInner {
    #[must_use]
    pub fn new() -> QuerySubAccountListResponseSubAccountsInner {
        QuerySubAccountListResponseSubAccountsInner {
            sub_user_id: None,
            email: None,
            remark: None,
            is_freeze: None,
            create_time: None,
            is_managed_sub_account: None,
            is_asset_management_sub_account: None,
        }
    }
}
