/*
 * Binance Sub Account REST API
 *
 * OpenAPI Specification for the Binance Sub Account REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::sub_account::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner {
    #[serde(rename = "entryPrice", skip_serializing_if = "Option::is_none")]
    pub entry_price: Option<String>,
    #[serde(rename = "leverage", skip_serializing_if = "Option::is_none")]
    pub leverage: Option<String>,
    #[serde(rename = "maxNotional", skip_serializing_if = "Option::is_none")]
    pub max_notional: Option<String>,
    #[serde(rename = "liquidationPrice", skip_serializing_if = "Option::is_none")]
    pub liquidation_price: Option<String>,
    #[serde(rename = "markPrice", skip_serializing_if = "Option::is_none")]
    pub mark_price: Option<String>,
    #[serde(rename = "positionAmount", skip_serializing_if = "Option::is_none")]
    pub position_amount: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "unrealizedProfit", skip_serializing_if = "Option::is_none")]
    pub unrealized_profit: Option<String>,
}

impl GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner {
    #[must_use]
    pub fn new() -> GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner {
        GetFuturesPositionRiskOfSubAccountV2ResponseFuturePositionRiskVosInner {
            entry_price: None,
            leverage: None,
            max_notional: None,
            liquidation_price: None,
            mark_price: None,
            position_amount: None,
            symbol: None,
            unrealized_profit: None,
        }
    }
}
