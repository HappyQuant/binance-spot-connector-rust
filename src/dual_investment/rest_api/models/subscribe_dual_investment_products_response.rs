/*
 * Binance Dual Investment REST API
 *
 * OpenAPI Specification for the Binance Dual Investment REST API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#![allow(unused_imports)]
use crate::dual_investment::rest_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubscribeDualInvestmentProductsResponse {
    #[serde(rename = "positionId", skip_serializing_if = "Option::is_none")]
    pub position_id: Option<i64>,
    #[serde(rename = "investCoin", skip_serializing_if = "Option::is_none")]
    pub invest_coin: Option<String>,
    #[serde(rename = "exercisedCoin", skip_serializing_if = "Option::is_none")]
    pub exercised_coin: Option<String>,
    #[serde(rename = "subscriptionAmount", skip_serializing_if = "Option::is_none")]
    pub subscription_amount: Option<String>,
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<i64>,
    #[serde(rename = "autoCompoundPlan", skip_serializing_if = "Option::is_none")]
    pub auto_compound_plan: Option<String>,
    #[serde(rename = "strikePrice", skip_serializing_if = "Option::is_none")]
    pub strike_price: Option<String>,
    #[serde(rename = "settleDate", skip_serializing_if = "Option::is_none")]
    pub settle_date: Option<i64>,
    #[serde(rename = "purchaseStatus", skip_serializing_if = "Option::is_none")]
    pub purchase_status: Option<String>,
    #[serde(rename = "apr", skip_serializing_if = "Option::is_none")]
    pub apr: Option<String>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i64>,
    #[serde(rename = "purchaseTime", skip_serializing_if = "Option::is_none")]
    pub purchase_time: Option<i64>,
    #[serde(rename = "optionType", skip_serializing_if = "Option::is_none")]
    pub option_type: Option<String>,
}

impl SubscribeDualInvestmentProductsResponse {
    #[must_use]
    pub fn new() -> SubscribeDualInvestmentProductsResponse {
        SubscribeDualInvestmentProductsResponse {
            position_id: None,
            invest_coin: None,
            exercised_coin: None,
            subscription_amount: None,
            duration: None,
            auto_compound_plan: None,
            strike_price: None,
            settle_date: None,
            purchase_status: None,
            apr: None,
            order_id: None,
            purchase_time: None,
            option_type: None,
        }
    }
}
